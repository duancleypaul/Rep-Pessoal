+--------------------+
| BASICO - MODULO 01 |
+--------------------+

//--- AULA 01
> Diz que vai apresentar a plataforma, mesmo pra quem já conhece


//--- AULA 02
> Mostra a janela OBSERVAÇÃO DO MERCADO
---> Mostra cotações dos ativos


//--- AULA 03
> Mostra como adicionar colunas na janela
> informações contidas em cada ativo
> Mostra conteúdode cada aba da janela


//--- AULA 04
> Ainda na janela OBSERVAÇÃO DO MERCADO
> 2 cliques abaixo do ativo abre uma caixa de texto pra inserir um novo ativo
> Arrastar o ativo para a janela cinza do metatrader irá abrir um gráfico com aquele ativo


//--- AULA 05
> Ainda na janela OBSERVAÇÃO DO MERCADO
> botao direito > mostrar todos : mostra todos os ativos existentes 
> botao direito > ocultar todos : oculta todos os ativos, menos os que possuírem gráfico aberto


//--- AULA 06
> Ainda na janela OBSERVAÇÃO DO MERCADO
> Deixar o mínimo de informação possível na tela, pra otimizar a performance da plataforma


//--- AULA 07
> Explica o conteudo da Janela NAVEGADOR


//--- AULA 08
> Ainda na janela NAVEGADOR
> Explica a aba CONTAS
> Ensina a criar conta demo via mt5


//--- AULA 09
> Mostra como os servidores e contas são exibidos na janela NAVEGADOR
> Vc pode ter quantas contas e quantos servidores quiser, mas só pode utilizar uma conta em um servidor por vez.


//--- AULA 10
> Clicando em AJUDA dá pra ver a Build do mt5
> Abrir conta no servidor MetaQuotes-Demo, para atualizar a build


//--- AULA 11
> Mostra ping do servidor e explica que dá pra colocar na núvem pra reduzir latência


//--- AULA 12
> Janela CAIXA DE FERRAMENTAS
> Aba Negociação


//--- AULA 13
> CAIXA DE FERRAMENTAS
--> Aba EXPOSIÇAO


//--- AULA 14
> CAIXA DE FERRAMENTAS
--> Aba HISTORICO


//--- AULA 15
> CAIXA DE FERRAMENTAS
--> Abas NOTICIAS, CAIXA DE EMAIL (correio), MERCADO, ALERTAS, SINAIS
> Mostra como os sinais ficam registrados na plataforma do mql5


//--- AULA 16
> Mostra como os sinais ficam registrados na plataforma do mql5


//--- AULA 17
> Mostra como os sinais ficam registrados na plataforma do mql5


//--- AULA 18
> Ensina como criar um sinal
> NÃO CRIAR SINAL QUANDO ESTIVER POSICIONADO. FECHAR A POSIÇÃO ANTES DE CRIAR O SINAL!


//--- AULA 19
> CAIXA DE FERRAMENTAS
--> Aba BIBLIOTECA mostra códigos gratuitos no site mql5


//--- AULA 20
> CAIXA DE FERRAMENTAS
--> Aba EXPERTS: aba mais importante para EAs


//--- AULA 21
> CAIXA DE FERRAMENTAS
--> Aba EXPERTS e DIARIO
> 4 abas mais importantes: NEGOCIÇÕES, HISTORICO, EXPERTS e DIARIO


//--- AULA 22
> NAO EXISTE


//--- AULA 23
> TESTADOR DE ESTRATEGIAS
--> Exibir > Testador de Estratégias (Ctrl+R)
> Mt5 permite ligar computadores em paralelo para utilizar os nucleos em conjunto e otimizar a performance dos testes
> *** ESSA AULA ENSINA COMO FAZER ISSO ***


//--- AULA 24
> O mql5 tbm possui nucleos disponiveis para "alugar" (usar a nuvem do mql5).


//--- AULA 25
> Ensina a deixar a tela do notebook dividida em 2 (lado direito com mt5 e lado esquerdo com MetaEditor)


+--------------------+
| BASICO - MODULO 02 |
+--------------------+

//--- AULA 26
> Apresenta o MetaEditor
> Cria um Script (Coaching_Teste)


//--- AULA 27
> Após compilar o script criado, o arquivo aparece no metatrader, janela Navegador, pasta Scripts


//--- AULA 28
> Cria um EA (Coaching_EA)
> Mostra o EA no metatrader, janela Navegador, pasta Expert Advisor
> O mesmo eh feito com a criação de um indicador


//--- AULA 29
> Diferença entre EA, Script e Indicador


//--- AULA 30
> Print("Hello World!"), no script criado, dentro de OnStart
> Mostra o lugar onde os Erros aparecem, se presentes


//--- AULA 31
> Pulou para TerceiraFuncao()
---> ESSA AULA PERTENCE AO MODULO 5 AULA 60 (está repetida)


//--- AULA 32
> Arrasta o script compilado para dentro de um grafico
--> Mostra a interação do script com o gráfico, e que ele só roda 1 vez
--> Mensagens aparecem na aba EXPERTS da CAIXA DE FERRAMENTAS


+--------------------+
| BASICO - MODULO 03 |
+--------------------+

//--- AULA 33
> Aba NEGOCIAÇÃO do mt5


//--- AULA 34
> ctrl+G = grid on/off no grafico do mt5
> botão direito > salvar como imagem > OK
--> abre o mql5.com e salva na sua conta o print


//--- AULA 35
> mql5 eh baseada em c++

//--- AULA 36
> fala sobre c++


//--- AULA 37
> mql5 (c++) vs mql4 (c)
> 3 tipos de programas: EAs, scripts e indicadores
> MetaEditor eh a IDE do mql5

//--- AULA 38
> SINTAXE:
--> Comentário linha: //


//--- AULA 39
> SINTAXE:
--> Comentário bloco: /* [bloco] */
--> ctrl+. : comentário de sessão
--> ctrl+; : abre "//---"


//--- AULA 40
> mql5 eh case sensitive
> Praxe:
--> Função: MyFunction
--> Variável: myVariable


//--- AULA 41
> Dar nomes intuitivos para as variáveis
--> Ex: "saldoEmConta" é melhor que "sec"


//--- AULA 42
> ctrl+~ : comenta todas as linhas selecionadas
> ctrl+ç : descomenta todas as linhas selecionadas

//--- AULA 43
> mql5 tem palavras reservadas (se mudar a corda da palavra, é reservada)


+--------------------+
| BASICO - MODULO 04 |
+--------------------+

//--- AULA 44
> tipos de variáveis 
--> Inteiros: char, short, int, long, uchar, ushort
--> Lógicos: bool
--> Texto: string
--> Ponto flutuante: double, float
--> Cor: color
--> Data e hora: datetime
--> Enumeradores: enum

//--- AULA 45
> Toda variavel tem:
--> Tipo: int, string, float, datetime, etc...
--> Identificador: nomeDaVariavel
--> Valor: varia de acordo com o tipo

//--- AULA 46
> OBS: ao usar o tipo COLOR, o valor de cor atribuído à variável SEMPRE começará com "clr"
---> Ex: clrWhite, clrBlack, etc...


//--- AULA 47
> OBS: ao usar o tipo DATETIME, o valor de data/hora atribuído à variável SEMPRE terá o formato D'YYYY.MM.DD HH:MM:SS'
---> Ex: D'2020.01.11 18:57:31'


//--- AULA 48
> mql5 mostra a linha e coluna do erro encontrado
> ctrl+G : ir para "nº da linha que deseja ir"
--> tambémm dá pra dar 2 cliques no erro (o mt5 levará até a linha do erro identificado)


//--- AULA 49
> PDF com leitura complementar. É basicamente o texto de tudo que foi ensinado até aqui


//--- AULA 50
> Recomenda a leitura complementar e o manual do mql5

+--------------------+
| BASICO - MODULO 05 |
+--------------------+
//--- AULA 51
> Fala sobre funções
> Toda função tem: TIPO, NOME, ARGUMENTOS (opcional), CORPO
--> nos argumentos, deve-se declarar o tipo do argumento também
> Função SEM retorno
--> tipo void


//--- AULA 52
> Estrutura de uma função:
tipo NomeDaFuncao(tipo arg1, tipo arg2)
{
  corpo da função;
}


//--- AULA 53
> Reforça que toda função tem TIPO, NOME, ARGUMENTOS e CORPO
> Não pode definir uma função dentro de outra. As definições devem ser independentes. Já referenciar uma função, pode.
> Faz uma funcao que soma x e y

//--- AULA 54
> Para referenciar (chamar) uma função, basta colocar o nome e, entre parenteses, os argumentos (se houver)
--> Ex: MinhaFuncao();


//--- AULA 55
> NÃO TEM AULA 55


//--- AULA 56
> Mostra um script rodando hello world e uma função soma


//--- AULA 57
> Cria uma segunda função, dessa vez SEM retorno, mas COM argumentos
> Mostra como referenciar (chamar) uma função void com argumentos


//--- AULA 58
> Mostra o resultado da função anterior exibido na aba negociação


//--- AULA 59
> Cria e chama uma função COM retorno e SEM argumentos
> Estrutura de função com retorno, com ou sem argumentos (exemplo):
tipo NomeDaFunção(tipo arg1, tipo arg2)
{
  return();
}

//--- AULA 60
> Continua falando sobre funções (conteúdo não é relevante)


//--- AULA 61
> Reforça a estrutura de uma função COM retorno


//--- AULA 62
> Mostra como criar e chamar uma função COM retorno e COM argumento


+--------------------+
| BASICO - MODULO 06 |
+--------------------+

//--- AULA 63
> Função OnStart: manipulador que é gerado automaticamente apenas na criação de SCRIPTS, que executa APENAS 1 VEZ

//--- AULA 64
> Criado o arquivo de EA: Coaching_EA1


//--- AULA 65
> Explica o que é OnInit, OnDeinit e OnTick


//--- AULA 66
> Mostra na prática a função OnInit


//--- AULA 67
> Mostra na prática a função OnDeinit e explica como funciona OnTick
> OnTick roda toda vez que ocorre uma mudança (volume ou preço) no melhor negócio (melhor compra e venda)


//--- AULA 68
> OnTimer(): manipulador adicional, usado pra simular o EA quando o mercado está fechado.
--> Associadas à função OnTimer, existem outras duas funções que são NECESSÁRIAS ao usar OnTimer
----> Dentro de OnInit(): EventSetTimer(x);   // x é o tempo em segundos
----> Dentro de OnDeinit(): EventKillTimer();


//--- AULA 69
> Mostra na prática como funciona a função OnTimer
> Alternativa ao EventSetTimer() para usar Milissegundos: EventSetMillisecondTimer(x); // x é o tempo em milissegundos


//--- AULA 70
> No fim de semana usa OnTimer, durante a semana pega tudo de OnTimer e joga pra dentro de OnTick. Vai funcionar normalmente.


//--- AULA 71
> INPUTS: colocados ANTES de todas as funções do robô, mas depois das propriedades (#property)
> Estrutura para colocar INPUTs no robô:
  input tipo nomeDaVariavel = valor;    // Texto explicativo para o usuário
  input int maxTrades = 5;    // Número máximo de trades


//--- AULA 72
> cria outro input e mostra como aparece para o usuário editar os parâmetros de cada input


//--- AULA 73
> Ao editar um input, o robô vai DESINICIALIZAR pra depois INICIALIZAR.
> Ou seja, vai rodar OnDeinit() e depois OnInit()


+--------------------+
| BASICO - MODULO 07 |
+--------------------+

//--- AULA 74
> Fala o que será passado nas próximas aulas


//--- AULA 75
> Explica o que é array de dados

//--- AULA 76
> Declaração de um array:
  double myArray[] = {2.5, 1.2, 3.1};


//--- AULA 77
> Mostra que o array pode ter mais de 1 dimensão, basta adicionar colchetes []. 
> Exemplo de matriz com 3 dimensões: double tresDimArray[][][]


//--- AULA 78
> Mostra como chamar cada elemento de um array. Ex: myArray[1] mostra o segundo elemento do array.


//--- AULA 79
> Mostra o que é e qual a necessidade de fazer a reindexação de um array (ArraySetAsSeries)

+--------------------+
| BASICO - MODULO 08 |
+--------------------+

//--- AULA 80
> Acesso a dados de preço (OHLC), depois dos inputs, fora de todas as funções:
  MqlRates candle[];

> Dentro da função OnTick, usar CopyRates

//--- AULA 81
> Dentro de OnTick:
  CopyRates(_Symbol, _Period, start_position, count, candle);
  // start_position: a partir de qual candle? (candle atual = 0)
  // count: até qual candle? (padrão = 5)


//--- AULA 82
> Agora o array "candle", que é do tipo MqlRates, possui os dados OHLC
> Métodos contidos em "candle":
--> .close
--> .high
--> .low
--> .open
--> .real_volume
--> .tick_volume
--> .time
> Exemplo de como acessar a maxima do candle atual: 
  Print("A máxima do candle atual é: ", candle[0].high);


//--- AULA 83
> Barra de tarefas > Exibir > Janela de Dados: mostra os dados de cada candle, conforme o mouse passa por cima
> Mostra que é necessário fazer o ArraySetAsSeries
> Invertendo a indexação das variáveis de preço, em OnInit: 
  ArraySetAsSeries(candle, true);


//--- AULA 84
> Mostra como acessar open, high, low, close através do array candle[]


//--- AULA 85
> Dá pra pegar dados de preço de um ativo diferente do que está no gráfico atual. Pra isso, precisa declarar outro array MqlRates
> Mostra que dá pra especificar o período do gráfico através de PERIOD_[...] (ao digitar PERIOD_, vai aparecer as opções)

*** ISSO PODE SER UTIL CASO QUEIRA FAZER UM EA COM MULTIPLOS ATIVOS ***

//--- AULA 86
> CONTRATOS CONTÍNUOS (usar sempre $D)
* OBS: no dia da rolagem, o código antigo e o código novo coexistem (apenas nesse dia de vencimento)
--> $: reajustado por liquidez (no dia da rolagem, pega o código novo, que tem mais liquidez)
--> @: reajuste por vencimento (no dia da rolagem, pega o código antigo)
-->  : ajuste Proporcional (faz o encaixe da série).
--> D: ajuste por Diferença.
--> N: sem ajuste.


+--------------------+
| BASICO - MODULO 09 |
+--------------------+

//--- AULA 87
> Acesso a dados de Tick
  MqlTick tick;           // Não eh array, eh variavel simples

> Dentro de OnTick: 
  SymbolInfoTick(_Symbol, tick);

//--- AULA 88
> Agora a variavel tick, do tipo MqlTick, já possui dados de Tick
> Métodos contidos em tick:
--> .ask      (melhor preço de compra)
--> .bid      (melhor preço de venda)
--> .last     (valor do último negócio)
--> .time     (hora do último negócio)
--> .volume   (volume do último negócio)


//--- AULA 89
> Mostra como acessar os demais métodos supracitados


//--- AULA 90
> Para saber em qual ponta foi realizada a última negociação:
if(tick.last == tick.ask)
{
  Print("Atividade compradora!");
}
if(tick.last == tick.bid)
{
  Print("Atividade compradora!");
}

//--- AULA 91
> Acesso a dados de book
  MqlBookInfo book[];       // é um array!
*** NÃO IREI FAZER ANOTAÇÕES AGORA. ASSISTIR AULA NOVAMENTE PARA MAIS DETALHES ***


//--- AULA 92
> OnBookEvent() é um manipulador mais apropriado para EAs que utilizam book.
*** NÃO IREI FAZER ANOTAÇÕES AGORA. ASSISTIR AULA NOVAMENTE PARA MAIS DETALHES ***


//--- AULA 93
> Continua tratando sobre book
*** NÃO IREI FAZER ANOTAÇÕES AGORA. ASSISTIR AULA NOVAMENTE PARA MAIS DETALHES ***


+--------------------+
| BASICO - MODULO 10 |
+--------------------+

//--- AULA 94
> Acesso a dados de indicadores
> Dois tipos: Nativos e Externos
> Technical Indicators: nativos 


//--- AULA 95
> Continuação da aula anterior
> Code Base (mql5): externos ou customizados


//--- AULA 96
> Todo indicador precisa ter: 1) handle; 2) buffer (array);

//--- AULA 97
> Todo handle precisa ser do tipo INT;              // É a fonte dos dados 
> Todo buffer precisa ser do tipo DOUBLE;           // Vetor onde serão alocados os dados


//--- AULA 98
> Utilizando um indicador nativo:

> No escopo global: 
    int       MA_Handle;
    double    MA_buffer[];
  
> Em OnInit():
    MA_Handle = iMA(_Symbol,_Period, ma_period, ma_shift, ma_method, applied_price);
      --> ma_period: periodo da média móvel;
      --> ma_shift: deslocamento;
      --> ma_method: MODE_SMA (simples), MODE_EMA (exponencial);
      --> applied_price: PRICE_CLOSE (fechamento), PRICE_OPEN (abertura), etc.


+--------------------+
| BASICO - MODULO 11 |
+--------------------+

//--- AULA 99
> Em OnTick: CopyBuffer(MA_Handle, buffer_num, start_pos, count, MA_Buffer);
    --> buffer_num: numero do buffer (quando há mais de 1 buffer, eles são enumerados por ordem de criação: 0, 1, 2, etc);
    --> start_pos: posição (candle) inicial de onde vc quer copiar os dados;
    --> count: quantidade de dados (candles) que quer copiar
    --> MA_Buffer: buffer criado para armazenar os dados do indicador.

//--- AULA 100
> Acessando media móvel no candle atual: MA_Buffer[0];
> Invertendo a indexação de MA_Buffer, em OnInit():
      ArraySetAsSeries(MA_Buffer, true);


//--- AULA 101
> Mostra como usar um indicador nativo qualquer (exemplo usando iStochastic)


//--- AULA 102
> Mostra como usar um indicador externo qualquer (exemplo usando ozymandias_lite)
> Baixar indicador, salvá-lo na pasta MQL5>Indicators, compilar arquivo na pasta.


//--- AULA 103
> Mostra como utilizar o indicador externo ozymandias_lite
*** NÃO IREI FAZER ANOTAÇÕES AGORA. ASSISTIR AULA NOVAMENTE PARA MAIS DETALHES ***


//--- AULA 104
> Fala particularidades do iCustom, usado para importar indicadores customizados


//--- AULA 105
> Continua utilizando indicador customizado citado anteriormente


//--- AULA 106
> Continua utilizando indicador customizado citado anteriormente


//--- AULA 107
> Menciona que tem muitos indicadores customizados disponíveis no site do mql5


+--------------------+
| BASICO - MODULO 12 |
+--------------------+

//--- AULA 108
> Diz que irá explicar o gráfico do caminho que a ordem percorre (envio, rejeição, aceite, etc)


//--- AULA 109
> Camadas (partes) envolvidas no roteamento de ordens:
--> Programa (EA);
--> Client Terminal (Terminal MT5);
--> Servidor (Corretora);


//--- AULA 110
> EXPLICA DETALHADAMENTE COMO FUNCIONA O ROTEAMENTO DE ORDENS E QUAIS PERCURSOS A ORDEM PODE PERCORRER
*** AULA IMPORTANTE PARA ENTENDIMENTO DO ROTEAMENTO DE ORDENS ***


//--- AULA 111
> Continua explicando o roteamento de ordens
*** AULA IMPORTANTE PARA ENTENDIMENTO DO ROTEAMENTO DE ORDENS ***


//--- AULA 112
> A resposta de uma solicitação de envio/recebimento de ordem sempre será fornecida, a fonte é que muda (terminal ou servidor).


//--- AULA 113
> OrderSend(requisicao, resposta);



+--------------------+
| BASICO - MODULO 13 |
+--------------------+

//--- AULA 114
> Event handler new bar mql5 (google)
> Copiar funcao bool IsNewBar() para o EA
> Digitar (datetime) antes de SeriesInfoInteger(...)


//--- AULA 115
> Para usar a funcao IsNewBar() citada anteriormente, basta criar uma variável booleana (dentro de OnTick) que receba o retorno dessa função
> Ex:
void OnTick()
{
    bool newBar = IsNewBar();
    ...
}
----> Essa função é útil para pegar a confirmação do fechamento de um candle

//--- AULA 116
> Mostra o EA rodando com confirmação da função IsNewBar() + cruzamento de médias


//--- AULA 117
> Mostra como verificar, num mesmo EA, o fechamento do candle de outro tempo gráfico
*** ÚTIL PARA ROBÔS QUE ANALISAM MAIS DE 1 TEMPO GRÁFICO ***
---> Basta duplicar a função e, ao invés de usar _Period, especificar o período desejado (ex: PERIOD_M15)
---> *** OBS: NÃO ESQUECER DE MUDAR O NOME DA FUNÇÃO PARA IsNewBar_M15() ***
---> *** OBS_2: Também tem que criar uma variável booleana que recebe essa nova função, como feito em bool newBar = IsNewBar() ***

+--------------------+
| BASICO - MODULO 14 |
+--------------------+

//--- AULA 118
> Monta um setup de compra/venda usando MqlTradeRequest e MqlTradeResult
    MqlTradeRequest   requisicao;
    MqlTradeResult    resposta;

> Limpando memória das variáveis criadas:
    ZeroMemory(requisicao);
    ZeroMemory(resposta);

> Para montar a requisição, bastar digitar "requisicao." dentro da estrutura do setup de compra/venda, e as opções aparecem para especificar

//--- AULA 119
> 


//--- AULA 120
> 


//--- AULA 121
> 


//--- AULA 122
> 


//--- AULA 123
> 


//--- AULA 124
> 


//--- AULA 125
> 


//--- AULA 126
> 


//--- AULA 127
> 


+--------------------+
| BASICO - MODULO 15 |
+--------------------+

//--- AULA 128
> 


//--- AULA 129
> 


//--- AULA 130
> 


//--- AULA 131
> 


//--- AULA 132
> 


//--- AULA 133
> 


//--- AULA 134
> 


//--- AULA 135
> 

|--------------------- FIM DO MÓDULO BÁSICO ---------------------|

+----------------------+
| AVANÇADO - MODULO 01 |
+----------------------+

//--- AULA 1
> 


//--- AULA 2
> 


//--- AULA 3
> 


//--- AULA 4


+----------------------+
| AVANÇADO - MODULO 02 |
+----------------------+

//--- AULA 5
