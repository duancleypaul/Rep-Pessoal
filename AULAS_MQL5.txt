+--------------------+
| BASICO - MODULO 01 |
+--------------------+

//--- AULA 01
> Diz que vai apresentar a plataforma, mesmo pra quem já conhece


//--- AULA 02
> Mostra a janela OBSERVAÇÃO DO MERCADO
---> Mostra cotações dos ativos


//--- AULA 03
> Mostra como adicionar colunas na janela
> informações contidas em cada ativo
> Mostra conteúdode cada aba da janela


//--- AULA 04
> Ainda na janela OBSERVAÇÃO DO MERCADO
> 2 cliques abaixo do ativo abre uma caixa de texto pra inserir um novo ativo
> Arrastar o ativo para a janela cinza do metatrader irá abrir um gráfico com aquele ativo


//--- AULA 05
> Ainda na janela OBSERVAÇÃO DO MERCADO
> botao direito > mostrar todos : mostra todos os ativos existentes 
> botao direito > ocultar todos : oculta todos os ativos, menos os que possuírem gráfico aberto


//--- AULA 06
> Ainda na janela OBSERVAÇÃO DO MERCADO
> Deixar o mínimo de informação possível na tela, pra otimizar a performance da plataforma


//--- AULA 07
> Explica o conteudo da Janela NAVEGADOR


//--- AULA 08
> Ainda na janela NAVEGADOR
> Explica a aba CONTAS
> Ensina a criar conta demo via mt5


//--- AULA 09
> Mostra como os servidores e contas são exibidos na janela NAVEGADOR
> Vc pode ter quantas contas e quantos servidores quiser, mas só pode utilizar uma conta em um servidor por vez.


//--- AULA 10
> Clicando em AJUDA dá pra ver a Build do mt5
> Abrir conta no servidor MetaQuotes-Demo, para atualizar a build


//--- AULA 11
> Mostra ping do servidor e explica que dá pra colocar na núvem pra reduzir latência


//--- AULA 12
> Janela CAIXA DE FERRAMENTAS
> Aba Negociação


//--- AULA 13
> CAIXA DE FERRAMENTAS
--> Aba EXPOSIÇAO


//--- AULA 14
> CAIXA DE FERRAMENTAS
--> Aba HISTORICO


//--- AULA 15
> CAIXA DE FERRAMENTAS
--> Abas NOTICIAS, CAIXA DE EMAIL (correio), MERCADO, ALERTAS, SINAIS
> Mostra como os sinais ficam registrados na plataforma do mql5


//--- AULA 16
> Mostra como os sinais ficam registrados na plataforma do mql5


//--- AULA 17
> Mostra como os sinais ficam registrados na plataforma do mql5


//--- AULA 18
> Ensina como criar um sinal
> NÃO CRIAR SINAL QUANDO ESTIVER POSICIONADO. FECHAR A POSIÇÃO ANTES DE CRIAR O SINAL!


//--- AULA 19
> CAIXA DE FERRAMENTAS
--> Aba BIBLIOTECA mostra códigos gratuitos no site mql5


//--- AULA 20
> CAIXA DE FERRAMENTAS
--> Aba EXPERTS: aba mais importante para EAs


//--- AULA 21
> CAIXA DE FERRAMENTAS
--> Aba EXPERTS e DIARIO
> 4 abas mais importantes: NEGOCIÇÕES, HISTORICO, EXPERTS e DIARIO


//--- AULA 22
> NAO EXISTE


//--- AULA 23
> TESTADOR DE ESTRATEGIAS
--> Exibir > Testador de Estratégias (Ctrl+R)
> Mt5 permite ligar computadores em paralelo para utilizar os nucleos em conjunto e otimizar a performance dos testes
> *** ESSA AULA ENSINA COMO FAZER ISSO ***


//--- AULA 24
> O mql5 tbm possui nucleos disponiveis para "alugar" (usar a nuvem do mql5).


//--- AULA 25
> Ensina a deixar a tela do notebook dividida em 2 (lado direito com mt5 e lado esquerdo com MetaEditor)


+--------------------+
| BASICO - MODULO 02 |
+--------------------+

//--- AULA 26
> Apresenta o MetaEditor
> Cria um Script (Coaching_Teste)


//--- AULA 27
> Após compilar o script criado, o arquivo aparece no metatrader, janela Navegador, pasta Scripts


//--- AULA 28
> Cria um EA (Coaching_EA)
> Mostra o EA no metatrader, janela Navegador, pasta Expert Advisor
> O mesmo eh feito com a criação de um indicador


//--- AULA 29
> Diferença entre EA, Script e Indicador


//--- AULA 30
> Print("Hello World!"), no script criado, dentro de OnStart
> Mostra o lugar onde os Erros aparecem, se presentes


//--- AULA 31
> Pulou para TerceiraFuncao()
---> ESSA AULA PERTENCE AO MODULO 5 AULA 60 (está repetida)


//--- AULA 32
> Arrasta o script compilado para dentro de um grafico
--> Mostra a interação do script com o gráfico, e que ele só roda 1 vez
--> Mensagens aparecem na aba EXPERTS da CAIXA DE FERRAMENTAS


+--------------------+
| BASICO - MODULO 03 |
+--------------------+

//--- AULA 33
> Aba NEGOCIAÇÃO do mt5


//--- AULA 34
> ctrl+G = grid on/off no grafico do mt5
> botão direito > salvar como imagem > OK
--> abre o mql5.com e salva na sua conta o print


//--- AULA 35
> mql5 eh baseada em c++

//--- AULA 36
> fala sobre c++


//--- AULA 37
> mql5 (c++) vs mql4 (c)
> 3 tipos de programas: EAs, scripts e indicadores
> MetaEditor eh a IDE do mql5

//--- AULA 38
> SINTAXE:
--> Comentário linha: //


//--- AULA 39
> SINTAXE:
--> Comentário bloco: /* [bloco] */
--> ctrl+. : comentário de sessão
--> ctrl+; : abre "//---"


//--- AULA 40
> mql5 eh case sensitive
> Praxe:
--> Função: MyFunction
--> Variável: myVariable


//--- AULA 41
> Dar nomes intuitivos para as variáveis
--> Ex: "saldoEmConta" é melhor que "sec"


//--- AULA 42
> ctrl+~ : comenta todas as linhas selecionadas
> ctrl+ç : descomenta todas as linhas selecionadas

//--- AULA 43
> mql5 tem palavras reservadas (se mudar a corda da palavra, é reservada)


+--------------------+
| BASICO - MODULO 04 |
+--------------------+

//--- AULA 44
> tipos de variáveis 
--> Inteiros: char, short, int, long, uchar, ushort
--> Lógicos: bool
--> Texto: string
--> Ponto flutuante: double, float
--> Cor: color
--> Data e hora: datetime
--> Enumeradores: enum

//--- AULA 45
> Toda variavel tem:
--> Tipo: int, string, float, datetime, etc...
--> Identificador: nomeDaVariavel
--> Valor: varia de acordo com o tipo

//--- AULA 46
> OBS: ao usar o tipo COLOR, o valor de cor atribuído à variável SEMPRE começará com "clr"
---> Ex: clrWhite, clrBlack, etc...


//--- AULA 47
> OBS: ao usar o tipo DATETIME, o valor de data/hora atribuído à variável SEMPRE terá o formato D'YYYY.MM.DD HH:MM:SS'
---> Ex: D'2020.01.11 18:57:31'


//--- AULA 48
> mql5 mostra a linha e coluna do erro encontrado
> ctrl+G : ir para "nº da linha que deseja ir"
--> tambémm dá pra dar 2 cliques no erro (o mt5 levará até a linha do erro identificado)


//--- AULA 49
> PDF com leitura complementar. É basicamente o texto de tudo que foi ensinado até aqui


//--- AULA 50
> Recomenda a leitura complementar e o manual do mql5

+--------------------+
| BASICO - MODULO 05 |
+--------------------+
//--- AULA 51
> Fala sobre funções
> Toda função tem: TIPO, NOME, ARGUMENTOS (opcional), CORPO
--> nos argumentos, deve-se declarar o tipo do argumento também
> Função SEM retorno
--> tipo void


//--- AULA 52
> Estrutura de uma função:
tipo NomeDaFuncao(tipo arg1, tipo arg2)
{
  corpo da função;
}


//--- AULA 53
> Reforça que toda função tem TIPO, NOME, ARGUMENTOS e CORPO
> Não pode definir uma função dentro de outra. As definições devem ser independentes. Já referenciar uma função, pode.
> Faz uma funcao que soma x e y

//--- AULA 54
> Para referenciar (chamar) uma função, basta colocar o nome e, entre parenteses, os argumentos (se houver)
--> Ex: MinhaFuncao();


//--- AULA 55
> NÃO TEM AULA 55


//--- AULA 56
> Mostra um script rodando hello world e uma função soma


//--- AULA 57
> Cria uma segunda função, dessa vez SEM retorno, mas COM argumentos
> Mostra como referenciar (chamar) uma função void com argumentos


//--- AULA 58
> Mostra o resultado da função anterior exibido na aba negociação


//--- AULA 59
> Cria e chama uma função COM retorno e SEM argumentos
> Estrutura de função com retorno, com ou sem argumentos (exemplo):
tipo NomeDaFunção(tipo arg1, tipo arg2)
{
  return();
}

//--- AULA 60
> Continua falando sobre funções (conteúdo não é relevante)


//--- AULA 61
> Reforça a estrutura de uma função COM retorno


//--- AULA 62
> Mostra como criar e chamar uma função COM retorno e COM argumento


+--------------------+
| BASICO - MODULO 06 |
+--------------------+

//--- AULA 63
> Função OnStart: manipulador que é gerado automaticamente apenas na criação de SCRIPTS, que executa APENAS 1 VEZ

//--- AULA 64
> Criado o arquivo de EA: Coaching_EA1


//--- AULA 65
> Explica o que é OnInit, OnDeinit e OnTick


//--- AULA 66
> Mostra na prática a função OnInit


//--- AULA 67
> Mostra na prática a função OnDeinit e explica como funciona OnTick
> OnTick roda toda vez que ocorre uma mudança (volume ou preço) no melhor negócio (melhor compra e venda)


//--- AULA 68
> OnTimer(): manipulador adicional, usado pra simular o EA quando o mercado está fechado.
--> Associadas à função OnTimer, existem outras duas funções que são NECESSÁRIAS ao usar OnTimer
----> Dentro de OnInit(): EventSetTimer(x);   // x é o tempo em segundos
----> Dentro de OnDeinit(): EventKillTimer();


//--- AULA 69
> Mostra na prática como funciona a função OnTimer
> Alternativa ao EventSetTimer() para usar Milissegundos: EventSetMillisecondTimer(x); // x é o tempo em milissegundos


//--- AULA 70
> No fim de semana usa OnTimer, durante a semana pega tudo de OnTimer e joga pra dentro de OnTick. Vai funcionar normalmente.


//--- AULA 71
> INPUTS: colocados ANTES de todas as funções do robô, mas depois das propriedades (#property)
> Estrutura para colocar INPUTs no robô:
  input tipo nomeDaVariavel = valor;    // Texto explicativo para o usuário
  input int maxTrades = 5;    // Número máximo de trades


//--- AULA 72
> cria outro input e mostra como aparece para o usuário editar os parâmetros de cada input


//--- AULA 73
> Ao editar um input, o robô vai DESINICIALIZAR pra depois INICIALIZAR.
> Ou seja, vai rodar OnDeinit() e depois OnInit()


+--------------------+
| BASICO - MODULO 07 |
+--------------------+

//--- AULA 74
> Fala o que será passado nas próximas aulas


//--- AULA 75
> Explica o que é array de dados

//--- AULA 76
> Declaração de um array:
  double myArray[] = {2.5, 1.2, 3.1};


//--- AULA 77
> Mostra que o array pode ter mais de 1 dimensão, basta adicionar colchetes []. 
> Exemplo de matriz com 3 dimensões: double tresDimArray[][][]


//--- AULA 78
> Mostra como chamar cada elemento de um array. Ex: myArray[1] mostra o segundo elemento do array.


//--- AULA 79
> Mostra o que é e qual a necessidade de fazer a reindexação de um array (ArraySetAsSeries)

+--------------------+
| BASICO - MODULO 08 |
+--------------------+

//--- AULA 80
> Acesso a dados de preço (OHLC), depois dos inputs, fora de todas as funções:
  MqlRates candle[];

> Dentro da função OnTick, usar CopyRates

//--- AULA 81
> Dentro de OnTick:
  CopyRates(_Symbol, _Period, start_position, count, candle);
  // start_position: a partir de qual candle? (candle atual = 0)
  // count: até qual candle? (padrão = 5)


//--- AULA 82
> Agora o array "candle", que é do tipo MqlRates, possui os dados OHLC
> Métodos contidos em "candle":
--> .close
--> .high
--> .low
--> .open
--> .real_volume
--> .tick_volume
--> .time
> Exemplo de como acessar a maxima do candle atual: 
  Print("A máxima do candle atual é: ", candle[0].high);


//--- AULA 83
> Barra de tarefas > Exibir > Janela de Dados: mostra os dados de cada candle, conforme o mouse passa por cima
> Mostra que é necessário fazer o ArraySetAsSeries
> Invertendo a indexação das variáveis de preço, em OnInit: 
  ArraySetAsSeries(candle, true);


//--- AULA 84
> Mostra como acessar open, high, low, close através do array candle[]


//--- AULA 85
> Dá pra pegar dados de preço de um ativo diferente do que está no gráfico atual. Pra isso, precisa declarar outro array MqlRates
> Mostra que dá pra especificar o período do gráfico através de PERIOD_[...] (ao digitar PERIOD_, vai aparecer as opções)

*** ISSO PODE SER UTIL CASO QUEIRA FAZER UM EA COM MULTIPLOS ATIVOS ***

//--- AULA 86
> CONTRATOS CONTÍNUOS (usar sempre $D)
* OBS: no dia da rolagem, o código antigo e o código novo coexistem (apenas nesse dia de vencimento)
--> $: reajustado por liquidez (no dia da rolagem, pega o código novo, que tem mais liquidez)
--> @: reajuste por vencimento (no dia da rolagem, pega o código antigo)
-->  : ajuste Proporcional (faz o encaixe da série).
--> D: ajuste por Diferença.
--> N: sem ajuste.


+--------------------+
| BASICO - MODULO 09 |
+--------------------+

//--- AULA 87
> Acesso a dados de Tick
  MqlTick tick;           // Não eh array, eh variavel simples

> Dentro de OnTick: 
  SymbolInfoTick(_Symbol, tick);

//--- AULA 88
> Agora a variavel tick, do tipo MqlTick, já possui dados de Tick
> Métodos contidos em tick:
--> .ask      (melhor preço de compra)
--> .bid      (melhor preço de venda)
--> .last     (valor do último negócio)
--> .time     (hora do último negócio)
--> .volume   (volume do último negócio)


//--- AULA 89
> Mostra como acessar os demais métodos supracitados


//--- AULA 90
> Para saber em qual ponta foi realizada a última negociação:
if(tick.last == tick.ask)
{
  Print("Atividade compradora!");
}
if(tick.last == tick.bid)
{
  Print("Atividade compradora!");
}

//--- AULA 91
> Acesso a dados de book
  MqlBookInfo book[];       // é um array!
*** NÃO IREI FAZER ANOTAÇÕES AGORA. ASSISTIR AULA NOVAMENTE PARA MAIS DETALHES ***


//--- AULA 92
> OnBookEvent() é um manipulador mais apropriado para EAs que utilizam book.
*** NÃO IREI FAZER ANOTAÇÕES AGORA. ASSISTIR AULA NOVAMENTE PARA MAIS DETALHES ***


//--- AULA 93
> Continua tratando sobre book
*** NÃO IREI FAZER ANOTAÇÕES AGORA. ASSISTIR AULA NOVAMENTE PARA MAIS DETALHES ***


+--------------------+
| BASICO - MODULO 10 |
+--------------------+

//--- AULA 94
> Acesso a dados de indicadores
> Dois tipos: Nativos e Externos
> Technical Indicators: nativos 


//--- AULA 95
> Continuação da aula anterior
> Code Base (mql5): externos ou customizados


//--- AULA 96
> Todo indicador precisa ter: 1) handle; 2) buffer (array);

//--- AULA 97
> Todo handle precisa ser do tipo INT;              // É a fonte dos dados 
> Todo buffer precisa ser do tipo DOUBLE;           // Vetor onde serão alocados os dados


//--- AULA 98
> Utilizando um indicador nativo:

> No escopo global: 
    int       MA_Handle;
    double    MA_buffer[];
  
> Em OnInit():
    MA_Handle = iMA(_Symbol,_Period, ma_period, ma_shift, ma_method, applied_price);
      --> ma_period: periodo da média móvel;
      --> ma_shift: deslocamento;
      --> ma_method: MODE_SMA (simples), MODE_EMA (exponencial);
      --> applied_price: PRICE_CLOSE (fechamento), PRICE_OPEN (abertura), etc.


+--------------------+
| BASICO - MODULO 11 |
+--------------------+

//--- AULA 99
> Em OnTick: CopyBuffer(MA_Handle, buffer_num, start_pos, count, MA_Buffer);
    --> buffer_num: numero do buffer (quando há mais de 1 buffer, eles são enumerados por ordem de criação: 0, 1, 2, etc);
    --> start_pos: posição (candle) inicial de onde vc quer copiar os dados;
    --> count: quantidade de dados (candles) que quer copiar
    --> MA_Buffer: buffer criado para armazenar os dados do indicador.

//--- AULA 100
> Acessando media móvel no candle atual: MA_Buffer[0];
> Invertendo a indexação de MA_Buffer, em OnInit():
      ArraySetAsSeries(MA_Buffer, true);


//--- AULA 101
> Mostra como usar um indicador nativo qualquer (exemplo usando iStochastic)


//--- AULA 102
> Mostra como usar um indicador externo qualquer (exemplo usando ozymandias_lite)
> Baixar indicador, salvá-lo na pasta MQL5>Indicators, compilar arquivo na pasta.


//--- AULA 103
> Mostra como utilizar o indicador externo ozymandias_lite
*** NÃO IREI FAZER ANOTAÇÕES AGORA. ASSISTIR AULA NOVAMENTE PARA MAIS DETALHES ***


//--- AULA 104
> Fala particularidades do iCustom, usado para importar indicadores customizados


//--- AULA 105
> Continua utilizando indicador customizado citado anteriormente


//--- AULA 106
> Continua utilizando indicador customizado citado anteriormente


//--- AULA 107
> Menciona que tem muitos indicadores customizados disponíveis no site do mql5


+--------------------+
| BASICO - MODULO 12 |
+--------------------+

//--- AULA 108
> Diz que irá explicar o gráfico do caminho que a ordem percorre (envio, rejeição, aceite, etc)


//--- AULA 109
> Camadas (partes) envolvidas no roteamento de ordens:
--> Programa (EA);
--> Client Terminal (Terminal MT5);
--> Servidor (Corretora);


//--- AULA 110
> EXPLICA DETALHADAMENTE COMO FUNCIONA O ROTEAMENTO DE ORDENS E QUAIS PERCURSOS A ORDEM PODE PERCORRER
*** AULA IMPORTANTE PARA ENTENDIMENTO DO ROTEAMENTO DE ORDENS ***


//--- AULA 111
> Continua explicando o roteamento de ordens
*** AULA IMPORTANTE PARA ENTENDIMENTO DO ROTEAMENTO DE ORDENS ***


//--- AULA 112
> A resposta de uma solicitação de envio/recebimento de ordem sempre será fornecida, a fonte é que muda (terminal ou servidor).


//--- AULA 113
> OrderSend(requisicao, resposta);



+--------------------+
| BASICO - MODULO 13 |
+--------------------+

//--- AULA 114
> Event handler new bar mql5 (google)
> Copiar funcao bool IsNewBar() para o EA
> Digitar (datetime) antes de SeriesInfoInteger(...)


//--- AULA 115
> Para usar a funcao IsNewBar() citada anteriormente, basta criar uma variável booleana (dentro de OnTick) que receba o retorno dessa função
> Ex:
void OnTick()
{
    bool newBar = IsNewBar();
    ...
}
----> Essa função é útil para pegar a confirmação do fechamento de um candle

//--- AULA 116
> Mostra o EA rodando com confirmação da função IsNewBar() + cruzamento de médias


//--- AULA 117
> Mostra como verificar, num mesmo EA, o fechamento do candle de outro tempo gráfico
*** ÚTIL PARA ROBÔS QUE ANALISAM MAIS DE 1 TEMPO GRÁFICO ***
---> Basta duplicar a função e, ao invés de usar _Period, especificar o período desejado (ex: PERIOD_M15)
---> *** OBS: NÃO ESQUECER DE MUDAR O NOME DA FUNÇÃO PARA IsNewBar_M15() ***
---> *** OBS_2: Também tem que criar uma variável booleana que recebe essa nova função, como feito em bool newBar = IsNewBar() ***

+--------------------+
| BASICO - MODULO 14 |
+--------------------+

//--- AULA 118
> Monta um setup de compra/venda usando MqlTradeRequest e MqlTradeResult
    MqlTradeRequest   requisicao;
    MqlTradeResult    resposta;

> Limpando memória das variáveis criadas:
    ZeroMemory(requisicao);
    ZeroMemory(resposta);

> Para montar a requisição, bastar digitar "requisicao." dentro da estrutura do setup de compra/venda, e as opções aparecem para especificar

//--- AULA 119
> Continua falando sobre a especificação da requisicao


//--- AULA 120
> Continua falando sobre a especificação da requisicao
OBS: Diferença entre tipos de ordem 
  --> ORDER_FILLING_FOK: Fill or Kill (consome todos os contratos ao preço requisitado ou nenhum - tudo ou nada)
  --> ORDER_FILLING_IOC: Immediate or Cancel (consome a quantidade que der e cancela o resto)
  --> ORDER_FILLING_RETURN: consome a quantidade que der e deixa o resto na pedra


//--- AULA 121
> Continua falando sobre a especificação da requisicao
*** VIDEO ACABA NO MEIO DA FRASE. NAO FALA SOBRE type_time, expiration, E comment ***


//--- AULA 122
> Após especificar os parâmetros da ordem, faz OrderSend(requisicao, resposta)


//--- AULA 123
> Ao compilar aparece um Warning: checar o resultado de OrderSend(). Para tratar isso:
    bool ok = OrderSend(requisicao, resposta)


//--- AULA 124
> VERIFICAÇÃO DE SEGURANÇA NO ENVIO DE ORDENS (TRATANDO A VARIAVEL "ok"):
--> 1. PRIMEIRO DE TUDO, resetar erro antes de declarar book ok = OrderSend(requisicao, resposta): 
          ResetLastError();
--> 2. ok==false: 
          if(ok==false){
              Print("Erro ao enviar ordem. Erro #", GetLastError());
              ExpertRemove(); 
              //--- o que pode ser feito:
              // 1) remover o EA
              // 2) retry no envio da ordem
              // 3) enviar uma notificação / e-mail
              // 4) imprimir um alerta
          }


//--- AULA 125
> Continuação... VERIFICAÇÃO DE SEGURANÇA NO ENVIO DE ORDENS (TRATANDO A VARIAVEL "ok"):

    else {
        Print("A ordem foi corretamente ENVIADA para a corretora.");
        }

> 2 códigos são de acertos: 10008 e 10009. O código 10010 pode ser acerto ou erro no envio, depende do que o robô deve fazer.


//--- AULA 126
> Dentro do ELSE anterior:
    if(resposta.retcode == 10008 ||  resposta.retcode == 10009){
        Print("Ordem corretamente EXECUTADA / COLOCADA.");
    }
    else {
        Print("Erro ao executar a ordem. Erro #", GetLastError(), " / retorno = ", resposta.retcode);
        ExpertRemove(); 
        //--- o que pode ser feito:
        // 1) remover o EA
        // 2) retry no envio da ordem
        // 3) enviar uma notificação / e-mail
        // 4) imprimir um alerta 
    }
    
    
//--- AULA 127
> ctrl+c ctrl+v para formar o setup de venda, com as devidas modificações (buy -> sell);


+--------------------+
| BASICO - MODULO 15 |
+--------------------+

//--- AULA 128
> Roda backtest do EA de cruzamento de media (video acaba antes de cruzar)


//--- AULA 129
> Comentários sobre o que foi feito (irrelevante)


//--- AULA 130
> Adiciona SL e TP, usando MqlTick tick


//--- AULA 131
> Verificar se não está posicionado:
      PositionSelect(_Symbol): retorna TRUE se estiver posicionado


//--- AULA 132
> Encapsula setup de compra a mercado dentro de uma função, com o nome CompraAMercado();
> O mesmo é feito para VendaAMercado();


//--- AULA 133
> Encapsula setup de compra/venda PENDENTE, com o nome CompraPendente() e VendaPendente();
> NÃO EXISTE SLIPPAGE EM ORDEM PENDENTE (deviation=0)
> NÃO PODE SER ORDER FOK. DEVE SER ORDEM RETURN!!!!

//--- AULA 134
> *** VER ESSA AULA SOBRE REALIZAÇÕES PARCIAIS ***


//--- AULA 135
> CANCELAMENTO DE ORDEM: feito pelo ticket da ordem
--> *** VER ESSA AULA SOBRE CANCELAMENTO DE ORDEM ***
ulong CancelaOrdem(ulong _ticket)
{
    
}



|--------------------- FIM DO MÓDULO BÁSICO ---------------------|

+----------------------+
| AVANÇADO - MODULO 01 |
+----------------------+

//--- AULA 1
> Introduz o conceito de CLASSE da linguagem orientada a objeto
> Praxe: iniciar nomes de classes com C. Ex: CParents


//--- AULA 2
> Fala sobre contrutor e destrutor da classe (não são obrigatórios);


//--- AULA 3
> Grupos de variáveis em uma classe:
--> public: acessadas por outras classes
--> private: acessadas somente pela própria classe e suas descendentes
--> protected: acessadas somente pela própria classe


//--- AULA 4
> Explica a ideia de parentesco das classes


+----------------------+
| AVANÇADO - MODULO 02 |
+----------------------+

//--- AULA 5
> Explica o funcionamento de classe
> Cria classe Father, Mother, Son, Daughter


//--- AULA 6
> Explica o funcionamento de classe
> Mostra como dizer ao mt5 que Son e Daughter sao derivadas da classe Mother


//--- AULA 7
> Explica o funcionamento de classe
> Cria variaveis publicas e privadas


//--- AULA 8
> Explica o funcionamento de classe
> Definindo objeto do tipo CMother: 
    CMother mae;


//--- AULA 9
> Explica o funcionamento de classe
> Construtores e Destrutores nao sao obrigatorios, mas quando presentes, as suas respectivas funcoes precisam ser definidas.


//--- AULA 10
> Explica o funcionamento de classe
> Declara funcao protegida, do tipo double, dentro da classe CMother. A funcao deve ser definida fora da classe CMother.
  OBS: ver aula!
> Como definir uma funcao que eh declarada dentro de uma classe:
    tipo NomeDaClasse::NomeDaFuncao(void)
    {
      // corpo da funcao
      // return (caso nao seja void)
    }
***  OBS: a declaracao do contrutor/destrutor eh igual, MAS NAO PRECISA COLOCAR O TIPO ***

+----------------------+
| AVANÇADO - MODULO 03 |
+----------------------+

//--- AULA 11
> Continua explicando o funcionamento de classe
> Mostra como os metodos da classe ficam disponiveis ao acesso via objeto.


//--- AULA 12
> Continua explicando o funcionamento de classe
> Mostra, na pratica, as herancas entre as classes


//--- AULA 13
> Continua explicando o funcionamento de classe
> Mostra, na pratica, as herancas entre as classes


//--- AULA 14
> Chama a atencao a classe CTrade, mas nao fala nada sobre ela ainda 
(aula irrelevante)


//--- AULA 15
> Explica como importar uma classe (CChart):
      #include <Charts\Chart.mqh>


//--- AULA 16
> Mostra como entender uma classe pela documentacao no portal mql5


//--- AULA 17
> Mostra como usar Fibo, pela classe ChartObjectFibo


//--- AULA 18
> Mostra como usar a classe CTrade
> Mesmo usando CTrade, deve-se fazer a verificcacao de envio da ordem:
if (trade.ResultRetcode == 10008 || trade.ResultRetcode == 10009)
{
    Print("Ordem EXECUTADA / ENVIADA com sucesso!");
}
else {
    Print("Erro ao enviar ordem. Erro #",GetLastError());
}


//--- AULA 19
> Desligando modo assincrono, em OnInit:
    trade.SetAsyncMode(false);


+----------------------+
| AVANÇADO - MODULO 04 |
+----------------------+

//--- AULA 20
> Existem 2 tipos de indicadores: os plotados na mesma janela e os plotados em janela separada


//--- AULA 21
> Mostra como criar indicador customizado em janela separada ou na mesma janela (introducao)


//--- AULA 22
> Indicacao de artigos para consulta:
---> Estilos de indicadores;
---> Artigo 45: https://www.mql5.com/pt/articles/45 (tem imagens dos indicadores)

> Fala sobre o desenvolvimento do indicador
---> CARACTERISTICAS DO INDICADOR:
        #property indicator_buffers 1             // numero de buffers
        #property indicator_plots   1             // numero de plots graficos
        //---
        #property indicator_label1  "Teste1"      // nome do indicador
        #property indicator_type1   DRAW_LINE     // tipo de indicador
        #property indicator_style1  STYLE_SOLID   // estilo
        #property indicator_color1  clrRed        // cor
        #property indicator_width1  2             // espessura ou tamanho
        
---> VARIAVEIS GLOBAIS:
        double indBuffer[];
        
        
//--- AULA 23
> Aula repetida (inicio da aula 22 sobre os estilos de indicadores)


//--- AULA 24
> Aula repetida (inicio da aula 22 sobre o artigo 45)


//--- AULA 25
> Aula repetida (Aula 22: caracteristicas do indicador)


+----------------------+
| AVANÇADO - MODULO 05 |
+----------------------+

//--- AULA 26
> Aula repetida (Aula 22: caracteristicas do indicador)


//--- AULA 27
> Aula repetida (Aula 22: caracteristicas do indicador)


//--- AULA 28
> Aula repetida (Aula 22: variaveis globais)


//--- AULA 29
> Aula repetida (Aula 22: variaveis globais)


+----------------------+
| AVANÇADO - MODULO 06 |
+----------------------+

//--- AULA 30
> Aula repetida (Aula 22: mapeamento dos buffers)


//--- AULA 31
 > Aula repetida (parte da aula 22)


//--- AULA 32
> Aula repetida (parte da aula 22)


//--- AULA 33
> Aula repetida (parte da aula 22)


//--- AULA 34
> Aula repetida (parte da aula 22)


//--- AULA 35
> Aula repetida (parte da aula 22)
> Explica a melhor praxe de programacao para calcular o indicador, economizando processamento

//--- AULA 36
> Brinca com os estilos de plot da linha e tipo de objeto desenhado


+----------------------+
| AVANÇADO - MODULO 07 |
+----------------------+

//--- AULA 37
> Plot do mesmo indicador, mas em janela separada
      #property indicator_separate_window


//--- AULA 38
> Coninua explocando indicador plotado em janela separada
> #property indicator_minimum 0 : indicador sem espacamento do eixo x

//--- AULA 39
> Inutil


//--- AULA 40
> Incrementa algumas funcionalidades no indicador


//--- AULA 41
> Colocando cores em indicadores (adicionando 1 buffer tipo double para a cor)


+----------------------+
| AVANÇADO - MODULO 08 |
+----------------------+

//--- AULA 42
> Faz um setup de compra usando o novo indicador criado anteriormente (critério de amplitude de candle)


//--- AULA 43
> Fala sobre indicadores com buffer de cor


//--- AULA 44
> reforça que as cores usadas no indicador devem ser declaradas no cabeçalho (#property)


//--- AULA 45
> Mostra como plotar 2 linhas na construção de 1 só indicador


//--- AULA 46
> Introduz manipulação de arquivos no mql5 (INÚTIL!!!)


+----------------------+
| AVANÇADO - MODULO 09 |
+----------------------+

//--- AULA 47
> Tipo de arquivos aceitos: CSV, TXT e BIN


//--- AULA 48
> Funções relacionadas a arquivos no mql5: https://www.mql5.com/pt/docs/files


//--- AULA 49
> RESTRIÇÕES: mt5 SÓ LÊ/GRAVA arquivos que estão na pasta MQL5>FILES.

> Retornando diretório que armazena os dados do terminal: 
      string terminal_data_path = TerminalInfoString(TERMINAL_DATA_PATH);

> Retornando diretório comum para todos os terminais de clientes:
      string common_data_path = TerminalInfoString(TERMINAL_COMMON_DATA_PATH);


//--- AULA 50
> Os arquivos são gravados em: terminal_data_path+"\\MQL5\\Files"
    OBS: as barras duplas são pra inserir "\" da forma correta

> Logo: string files_address = terminal_data_path+"\\MQL5\\Files\\";


+----------------------+
| AVANÇADO - MODULO 10 |
+----------------------+

//--- AULA 51
> Forma correta de obter o diretório dos arquivos:
    string files_address = TerminalInfoString(TERMINAL_DATA_PATH)+"\\MQL5\\Files\\";

> MANIPULAÇÃO DE ARQUIVOS NO MQL5
*** ESSA AULA É IMPORTANTE!!! ASSISTIR NOVAMENTE PARA MAIS DETALHES!!! ***


//--- AULA 52
> Continua falando sobre manipulação de arquivos no mql5
*** ESSA AULA É IMPORTANTE!!! ASSISTIR NOVAMENTE PARA MAIS DETALHES!!! ***


//--- AULA 53
> Continua falando sobre manipulação de arquivos no mql5
*** ESSA AULA É IMPORTANTE!!! ASSISTIR NOVAMENTE PARA MAIS DETALHES!!! ***


//--- AULA 54
> Continua falando sobre manipulação de arquivos no mql5
*** ESSA AULA É IMPORTANTE!!! ASSISTIR NOVAMENTE PARA MAIS DETALHES!!! ***


//--- AULA 55
> Continua falando sobre manipulação de arquivos no mql5
*** ESSA AULA É IMPORTANTE!!! ASSISTIR NOVAMENTE PARA MAIS DETALHES!!! ***


+----------------------+
| AVANÇADO - MODULO 11 |
+----------------------+

//--- AULA 56
> Continua falando sobre manipulação de arquivos no mql5 (boa praxe: fechar arquivo após escrita)
*** ESSA AULA É IMPORTANTE!!! ASSISTIR NOVAMENTE PARA MAIS DETALHES!!! ***


//--- AULA 57
> Continua falando sobre manipulação de arquivos no mql5
*** ESSA AULA É IMPORTANTE!!! ASSISTIR NOVAMENTE PARA MAIS DETALHES!!! ***


//--- AULA 58
> Continua falando sobre manipulação de arquivos no mql5
*** ESSA AULA É IMPORTANTE!!! ASSISTIR NOVAMENTE PARA MAIS DETALHES!!! ***


//--- AULA 59
> Continua falando sobre manipulação de arquivos no mql5
*** ESSA AULA É IMPORTANTE!!! ASSISTIR NOVAMENTE PARA MAIS DETALHES!!! ***


//--- AULA 60
> Continua falando sobre manipulação de arquivos no mql5
*** ESSA AULA É IMPORTANTE!!! ASSISTIR NOVAMENTE PARA MAIS DETALHES!!! ***


//--- AULA 61
> Continua falando sobre manipulação de arquivos no mql5
*** ESSA AULA É IMPORTANTE!!! ASSISTIR NOVAMENTE PARA MAIS DETALHES!!! ***


//--- AULA 62
> AULA REPETIDA (iguala a 61)
> Continua falando sobre manipulação de arquivos no mql5
*** ESSA AULA É IMPORTANTE!!! ASSISTIR NOVAMENTE PARA MAIS DETALHES!!! ***


//--- AULA 63 
> EXPORTANDO CSV OU TXT
> Continua falando sobre manipulação de arquivos no mql5
*** ESSA AULA É IMPORTANTE!!! ASSISTIR NOVAMENTE PARA MAIS DETALHES!!! ***


//--- AULA 64
> Continua falando sobre manipulação de arquivos no mql5
*** ESSA AULA É IMPORTANTE!!! ASSISTIR NOVAMENTE PARA MAIS DETALHES!!! ***


//--- AULA 65
> Lendo arquivos .dat (BIN)
> Continua falando sobre manipulação de arquivos no mql5
*** ESSA AULA É IMPORTANTE!!! ASSISTIR NOVAMENTE PARA MAIS DETALHES!!! ***


//--- AULA 66
> Diz que na próxima aula vai falar sobre a função de manipulação de eventos OnChartEvent, disponível na criação de EA


+----------------------+
| AVANÇADO - MODULO 12 |
+----------------------+

//--- AULA 67
> OnChartEvent() é executada quando acontece qualquer modificação no gráfico em que o EA está rodando.
---> Clicar com botão esquerdo, modificar escala horizontal/vertical, clicar e arrastar... Qualquer modificação visual no gráfico irá resultar na execução da função OnChartEvent()
> Na aula é colocada uma função Print() dentro de OnChartEvent() para exemplificar sua funcionalidade.

//--- AULA 68
> Os eventos capturados pela função OnChartEvent() são listados na documentação disponível no site do mql5
---> Acessível pelo site ou melo "help" do mt5


//--- AULA 69
> A função OnChartEvent() possui 4 parâmetros:
--> id: ID de qual evento está acontecendo para acionar a função OnChartEvent
    --> Capturando esse evento utilizando uma função:
          Ex: Print("OnChartEvent ID = ", EnumToString(ENUM_CHAT_EVENT)id);
          // A linha acima vai printar o evento que está causando a execução de OnChartEvent
          // Ex: se clicar no gráfico, vai printar: "OnChartEvent ID = CHARTEVENT_CLICK"
    --> Dá pra associar o evento CHARTEVENT_KEYDOWN, por exemplo, com uma compra/venda forçada 
--> lparam: não foi explicado nessa aula
--> dparam: não foi explicado nessa aula
--> sparam: não foi explicado nessa aula


//--- AULA 70
> Criando painel (comando inserido na função OnInit):
      SetPanel("Nome do Painel", int sub_window, int xx, int yy, int width, int height, 
                color bg_color, color border_clr, color border_width);
      // sub_window: 0 para utilizar janela de gráfico atual
      // xx: coordenada X em pixels (posição 0,0 é no canto superior esquerdo)
      // yy: coordenada Y em pixels (posição 0,0 é no canto superior esquerdo)
      // widht: largura do painel
      // height: altura do painel
      // bg_color: cor de fundo
      // border_clr: cor da borda
      // border_width: largura da borda

> Clicar dentro do painel gera um CHARTEVENT_OBJECT_CLICK + CHARTEVENT_CLICK
> Usar opção DRAGGABLE caso queira que o objeto seja "arrastável"


//--- AULA 71
> Pede pra baixar o arquivo mypanel.mq5
> Fala superficialmente sobre BIBLIOTECAS DE CONTROLE DE OBJETOS 


//--- AULA 72
> FALA SOBRE PAINEL E APPDIALOG. AULA MUITO IMPORTANTE!!!
*** ASSISTIR NOVAMENTE ESTA AULA PARA MAIS DETALHES!!! ***


//--- AULA 73
> FALA SOBRE PAINEL E APPDIALOG. AULA MUITO IMPORTANTE!!!
*** ASSISTIR NOVAMENTE ESTA AULA PARA MAIS DETALHES!!! ***


//--- AULA 74
> COMO CRIAR UM BOTÃO. AULA MUITO IMPORTANTE!!!
*** ASSISTIR NOVAMENTE ESTA AULA PARA MAIS DETALHES!!! ***


+----------------------+
| AVANÇADO - MODULO 13 |
+----------------------+

//--- AULA 75
> Linha de tendencia usando classe CChartObjectTrend
--> A linha de tendência utiliza apenas 4 valores:    
    --> data do ponto inicial;
    --> preço do ponto inicial;
    --> data do ponto final;
    --> preço do ponto final.
*** ASSISTIR NOVAMENTE ESTA AULA PARA MAIS DETALHES!!! ***


//--- AULA 76
> Mostra como usar a classe CChartObjectFibo, e explora seus recursos de forma muito objetiva (superficialmente)


//--- AULA 77
> Usa classe CChartObjectSubChart: cria uma subjanela com um gráfico que pode possuir (ou não) o mesmo ativo, tempo gráfico, objetos, etc.
*** ESSE ARTIFICIO É UTIL PARA O ROBÔ DA PALMINVEST (M5/M15) ***


//--- AULA 78
> Mostra um painel mais sofisticado da DeltaTrader (MultiStrategy v1.01)
> COMO IMPLEMENTAR AÇÕES EM UM BOTÃO:
    OnButtonClick();        //--- Deve estar dentro de OnChartEvent e criada normalmente com tipo void

*** ASSISTIR NOVAMENTE ESTA AULA PARA MAIS DETALHES!!! ***


//--- AULA 79
> Usa classe CEdit: serve para abrir uma caixa de texto editável (pode ser usada para o usuário alterar numero de contratos, SL, TP, etc., de forma interativa em uma boleta, por exemplo) 
*** ASSISTIR NOVAMENTE ESTA AULA PARA MAIS DETALHES!!! ***


//--- AULA 80
> Continua explorando a classe CEdit
> Usa função Alert() para gerar um alerta caso o parâmetro inserido na caixa editável seja incompatível com o valor esperado;
*** ASSISTIR NOVAMENTE ESTA AULA PARA MAIS DETALHES!!! ***


//--- AULA 81
> Fala sobre OTIMIZAÇÃO
--> Vc só consegue otimizar parâmetros que são INPUTS!!!
> Duas opções no Testador de Estratégias: algoritmo completo (lento) ou algoritmo genético (rápido)


+----------------------+
| AVANÇADO - MODULO 14 |
+----------------------+

//--- AULA 82
> OTIMIZACAO: rodar varios backtests de uma vez
> Soh serao otimizados os inputs que forem ticados na aba "Parametros de Entrada", na janela de backtest

> Durante BACKTEST: apenas a coluna "valor" importa
> Durante OTIMIZACAO: apenas as colunas INICIAR, PASSO, PARAR (a coluna PASSOS mostra quantas iteracoes a otimizacao tera)


//--- AULA 83
> Ao executar a otimizacao, a aba AGENTES mostra como as otimizacoes foram alocadas em cada nucleo do processador e o andamento da otimizacao


//--- AULA 84
> Os resultados da otimizacao estao na aba "Resultados da Otimizacao"
> Para abrir um dos testes (geralmente o melhor), basta clicar com o botao direito sobre o teste desejado e clicar em "Execute Unico Teste"
  *** ATENCAO: CLICAR NESSA OPCAO FAZ PERDER OS TESTES ANTERIORES. ANTES DE CLICAR, SALVE OS TESTES (Exportar a XML) ***


//--- AULA 85
> Mostra que da pra usar processadores externos (em rede ou nuvem)


//--- AULA 86
> Depois que rodar o resultado mais otimo, clicar na aba Resultados (janela Testador de Estrategias) para ver mais detalhes.


+----------------------+
| AVANÇADO - MODULO 15 |
+----------------------+

//--- AULA 87
> Serie continua ($D) serve pra operar backtest (ao vivo nao)


//--- AULA 88
> ALGORITMO GENETICO: aprende conforme os testes forem ocorrendo e deixa de executar os testes com parametros que ele julga ser menos lucrativos. Ex: na execucao de 10mil testes, o algoritmo genetico ira rodar cerca de 2.5k a 3k testes, uma vez que ira excluir algumas parametrizacoes nao lucrativas.


//--- AULA 89
> AULA ERRADA!!! Esse topico foi abordado em aulas muito anteriores 
---> foi usado MqlTick tick, com exemplo de tick.time


//--- AULA 90
> AULA INUTIL (diz que a qualidade dos ticks da xp eh boa)


//--- AULA 91
> A informacao "TICKS" nos resultados da otimizacao NAO SAO TICKS REAIS. Trata-se do numero de negociacoes existentes no periodo em que foi feito o backtest


//--- AULA 92
> Fala sobre o artigo 75 (https://www.mql5.com/pt/articles/75: explica o algoritmo gerador de ticks do mt5.
> O algoritmo baixa os dados OHLC de cada candle, o volume de contratos naquele candle e a quantidade de ticks existentes tambem no mesmo candle. Entretanto, os ticks sao gerados aleatoriamente, de forma a iniciar e terminar com as caracteristicas iniciais (OHLC, volume negociado e numero de negociacoes)


+----------------------+
| AVANÇADO - MODULO 16 |
+----------------------+

//--- AULA 93
> Explica mais detalhes dos Resultados do backtest
--> Fator de Ganho (FG): eh o lucro bruto dividido pela perda bruta (Ex: Fator_Ganho = 1.45 significa que pra cada R$1 de prejuizo eu ganhei R$1.45)
      --> Busca FG > 1 (menor que 1 eh prejuizo)


//--- AULA 94
> Fator de Recuperacao (FR): lucro bruto dividido pelo drawdown maximo do saldo
      --> Buscar resultados com FR > 1 (menor que 1 NAO eh prejuizo, mas eh muito risco pra pouco retorno)


//--- AULA 95
> Total de Negociacoes: compra + venda (ou vice-versa) = 1 negociacao
> Total Deals: compra + venda parcial + venda total = 3 deals
> O lucro liquido do mt5 nao desconta a corretagem


//--- AULA 96
> Retorno Esperado (RE): Lucro liquido (Gain - Loss) dividido pelo total de negociacoes.
      ---> Ex: um RE de 9.84 diz que vc ganha uma media de R$9.84/operacao.


//--- AULA 97
> Sharpe Ratio (indice tecnico de financas): eh o retorno superior a um benchmark qualquer de renda fixa (poupanca, cdb, lci, etc), dividido pela volatilidade das suas operacoes (desvio padrao)
      --> Compara o retorno que se tem em relacao ao risco que se corre
      --> Acredita-se que o mt5 desconsidera o benchmark de renda fixa
      --> Quanto maior o sharpe ratio, melhor!!!


//--- AULA 98
> LR (linear regression) Correlation: correlaciona uma reta (resultante de uma regressao linear) com o seu historico de saldo no backtest
      ---> quanto mais proximo de 1 melhor (HA CONTROVERSIAS: uma exponencial positiva, sem drawdown, seria algo excelente, mas nao mostraria LR Correlation = 1


//--- AULA 99
> Negociacoes de Compra/Venda: intuitivo
> Negociacoes com Lucro/Perda: intuitivo
> Ganho (maior/medio) em uma negociacao: intuitivo
> Perda (maior/media) em uma negociacao: intuitivo
> Ganhos/Perdas (maximo/media) consecutivos: intuitivo


//--- AULA 100
> O mt5 tambem gera graficos com distribuicoes interessantes que vale a pena observar para ajudar na parametrizacao do robo


//--- AULA 101
> Graficos adicionais:
  > MFE (Max Favorable Excursion): MEP (maior movimentacao POSITIVA dentro de uma operacao)
  
  > MAE (Max Adverse Excursion): MEN (maior movimentacao NEGATIVA dentro de uma operacao


//--- AULA 102 (AULA TOP!!! ASSISTIR NOVAMENTE!!!)
> Metricas primarias: Drawdown < 12%; FG > 1.5; FR > 3.0
> Metricas secundarias: sharpe ratio (quanto maior melhor), LR Correlation (mais proximo de 1), Negociacoes com Lucro
--> Lucro eh uma coisa relativa

> CAPTURANDO DRAWDOWN:
double OnTester()
{
  double ret=0.0;
  //---
  double dd = TesterStatistics(STAT_EQUITY_DD);
  double profitFactor = TesterStatistics(STAT_PROFIT_FACTOR);
  double recFactor = TesterStatistics(STAT_RECOVERY_FACTOR);
  //---
  if(dd > 12)
  {
    return(0.0);
  }
  else {
    dd = 1.0;
  }
  if(profitFactor < 1.5)
  {
    return(0.0);
  }
  else {
    profitFactor = 1.0;
  }
  if(recFactor < 3.0)
  {
    return(0.0);
  }
  else {
    recFactor = 1.0;
  }
  return(dd*profitFactor*recFactor);
}

> Na hora de otimizar o backtest, mudar "Balance max" para "Custom max" (isso fara o EA considerar o filtro OnTester no momento do backtest)
> OBS: O RESULTADO DA APROVACAO NO TESTE DEFINIDO EM OnTester EH EXIBIDO NA COLUNA "RESULTADO", DA ABA "RESULTADOS DA OTIMIZACAO"

//--- AULA 103 (AULA TOP!!! ASSISTIR NOVAMENTE!!!)
> Fala sobre colocar pesos no filtro inserido em OnTester


//--- AULA 104
> Mostra que se o EA utiliza dados de mais de 1 ativo e mais de 1 tempo grafico, no backtest aparecerao novas abas com todos os ativos e seus respectivos tempos graficos


//--- AULA 105
> Mostra como colocar pra o usuario inserir o timeframe desejado


